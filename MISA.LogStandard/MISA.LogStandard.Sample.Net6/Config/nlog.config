<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>    
  </extensions>
  <variable name="env" value="devtest"/>
  <variable name="app-id" value="misa-logstandard"/>
  <!-- the targets to write to -->
  <targets async="true">
    <!-- File Target for all log messages with basic details -->
    <!--
    <target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

    -->
    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <!--
    <target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-AspNetCore-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    -->
    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <!--
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />-->
    <target name="console" xsi:type="Console" layout="${longdate}|${activityid:whenEmpty=${aspnet-TraceIdentifier}}|${aspnet-request-url}|${iis-site-name}|${aspnet-request-method}|${environment:Env}|gdc|${gdc:item=myVariableName}|End"/>
    <target xsi:type="File" name="allfile" fileName="D:\Temp\Testlog\log-${shortdate}.log"
               layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />
    <!--<target xsi:type="WebService" name="personal-log-stash" url="http://43.199.2.247:8080" encoding="utf-8" protocol="JsonPost" >-->
    <target xsi:type="WebService"
            name="logstash"
            url="http://43.199.2.247:8080"
            protocol="JsonPost"
            encoding="UTF-8"           
            ignoreErrors="true">
      <parameter name="app-id" type="System.String" layout="log-standard" />
      <parameter name="message" type="System.String" layout="${message}" />
      <parameter name="level" type="System.String" layout="${level}" />
      <parameter name="logger" type="System.String" layout="${logger}" />
      <parameter name="exception" type="System.String" layout="${exception:format=tostring}" />
      <parameter name="url" type="System.String" layout="${aspnet-request-url}" />
      <parameter name="action" type="System.String" layout="${aspnet-mvc-action}" />
      <parameter name="eventId" type="System.String" layout="${event-properties:item=EventId:whenEmpty=0}" />
      <parameter name="logDate" type="System.String" layout="${longdate}" />
    </target>
    <target xsi:type="WebService"
            name="WebServiceTarget"
            url="http://43.199.2.247:8080"
            protocol="JsonPost"
            encoding="UTF-8"
            contentType="application/json"
            includeBOM="false"
            namespace="http://tempuri.org"           
            allowCookies="true"
            ignoreErrors="true">
      <parameter name="log" layout="${message}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="*" minlevel="Info" writeTo="console" />
    <!--<logger name="*" minlevel="Info" writeTo="logstash" />-->
    <!--<logger name="*" minlevel="Trace" writeTo="allfile" />
    <logger name="*" minlevel="Error" writeTo="logstash" />-->

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <!--
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

    -->
    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <!--
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
  </rules>
</nlog>